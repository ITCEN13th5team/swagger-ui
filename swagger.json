{
  "openapi": "3.0.1",
  "info": {
    "title": "Run Hi BE API",
    "description": "런하이 Swagger API Server 입니다.",
    "version": "2.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Crew API",
      "description": "크루 관련 API"
    },
    {
      "name": "Record API",
      "description": "러닝기록 관련 API"
    },
    {
      "name": "User API",
      "description": "회원 관련 API"
    },
    {
      "name": "Course API",
      "description": "코스 관련 API"
    },
    {
      "name": "Group API",
      "description": "크루 내 그룹 관련 API"
    },
    {
      "name": "Comment API",
      "description": "게시글 댓글 관련 API"
    },
    {
      "name": "Board API",
      "description": "크루 내 게시글 관련 API"
    }
  ],
  "paths": {
    "/api/users/reissue": {
      "post": {
        "tags": [
          "User API"
        ],
        "summary": "AccessToken 재발급",
        "description": "AccessToken을 재발급 받습니다.",
        "operationId": "reissue",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseTokenReIssueResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": [
          "User API"
        ],
        "summary": "로그아웃",
        "description": "현재 로그인한 유저를 로그아웃합니다.",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/join": {
      "post": {
        "tags": [
          "User API"
        ],
        "summary": "회원가입",
        "description": "새로운 유저를 등록합니다.",
        "operationId": "join",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseJoinResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/records": {
      "post": {
        "tags": [
          "Record API"
        ],
        "summary": "러닝기록 등록",
        "description": "새로운 러닝기록을 등록합니다.",
        "operationId": "registerRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseRegisterRecordResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/crews": {
      "get": {
        "tags": [
          "Crew API"
        ],
        "summary": "크루 목록 조회",
        "description": "키워드로 크루 목록을 페이징하여 조회합니다.",
        "operationId": "getCrews",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "createdAt,DESC"
              ]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "검색 키워드",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponsePageResponseDtoCrewResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Crew API"
        ],
        "summary": "크루 생성",
        "description": "새로운 크루를 등록합니다.",
        "operationId": "createCrew",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCrewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseRegisterCrewResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/crews/{crewId}/leave": {
      "post": {
        "tags": [
          "Crew API"
        ],
        "summary": "크루 탈퇴",
        "description": "사용자가 해당 크루에서 탈퇴합니다.",
        "operationId": "leaveCrew",
        "parameters": [
          {
            "name": "crewId",
            "in": "path",
            "description": "크루 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/crews/{crewId}/join": {
      "post": {
        "tags": [
          "Crew API"
        ],
        "summary": "크루 가입",
        "description": "사용자가 해당 크루에 가입합니다.",
        "operationId": "joinCrew",
        "parameters": [
          {
            "name": "crewId",
            "in": "path",
            "description": "크루 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/crews/{crewId}/groups": {
      "get": {
        "tags": [
          "Group API"
        ],
        "summary": "그룹 목록 조회",
        "description": "특정 크루 내의 모든 그룹을 조회합니다.",
        "operationId": "getGroups",
        "parameters": [
          {
            "name": "crewId",
            "in": "path",
            "description": "크루 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseListGroupResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Group API"
        ],
        "summary": "그룹 등록",
        "description": "특정 크루 내에 새로운 그룹을 생성합니다.",
        "operationId": "registerGroup",
        "parameters": [
          {
            "name": "crewId",
            "in": "path",
            "description": "크루 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseRegisterGroupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/crews/{crewId}/boards": {
      "post": {
        "tags": [
          "Board API"
        ],
        "summary": "크루 게시글 등록",
        "description": "새로운 게시글을 작성합니다.",
        "operationId": "registerBoard",
        "parameters": [
          {
            "name": "crewId",
            "in": "path",
            "description": "크루 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterBoardRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseRegisterBoardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/crews/{crewId}/boards/{boardId}/comments": {
      "get": {
        "tags": [
          "Comment API"
        ],
        "summary": "댓글 목록 조회",
        "description": "특정 크루 게시글의 모든 댓글을 조회합니다.",
        "operationId": "getComment",
        "parameters": [
          {
            "name": "crewId",
            "in": "path",
            "description": "크루 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "boardId",
            "in": "path",
            "description": "게시글 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseListCommentResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Comment API"
        ],
        "summary": "댓글 작성",
        "description": "해당 게시글에 댓글을 작성합니다.",
        "operationId": "createComment",
        "parameters": [
          {
            "name": "crewId",
            "in": "path",
            "description": "크루 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "boardId",
            "in": "path",
            "description": "게시글 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCommentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseRegisterCommentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/courses": {
      "get": {
        "tags": [
          "Course API"
        ],
        "summary": "코스 목록 조회",
        "description": "전체 코스 목록을 페이징하여 조회합니다.",
        "operationId": "getCourses",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponsePageResponseDtoCourseResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Course API"
        ],
        "summary": "코스 등록",
        "description": "새로운 코스를 등록합니다.",
        "operationId": "registerCourse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCourseRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseCourseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/courses/upload/image": {
      "post": {
        "tags": [
          "Course API"
        ],
        "summary": "코스 이미지 업로드",
        "description": "사용자가 저장한 코스 이미지를 S3에 업로드합니다.",
        "operationId": "uploadCourseImage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseImageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/courses/{courseId}/like": {
      "delete": {
        "tags": [
          "Course API"
        ],
        "summary": "코스 좋아요 취소 ",
        "description": "사용자가 코스 좋아요를 취소합니다.",
        "operationId": "unlikeCourse",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseVoid"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Course API"
        ],
        "summary": "코스 좋아요",
        "description": "사용자가 코스를 좋아요합니다.",
        "operationId": "likeCourse",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseVoid"
                }
              }
            }
          }
        }
      }
    },
    "/api/courses/{courseId}/description": {
      "patch": {
        "tags": [
          "Course API"
        ],
        "summary": "코스 설명 등록",
        "description": "코스에 대한 설명을 추가 등록합니다.",
        "operationId": "registerDescription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDescriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseRegisterDescriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/info": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "내 정보 조회",
        "description": "현재 로그인한 유저의 정보를 조회합니다.",
        "operationId": "myinfo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/email/check": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "이메일 중복 확인",
        "description": "이메일의 중복 여부를 확인합니다.",
        "operationId": "checkEmail",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "중복 확인할 이메일",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseUser"
                }
              }
            }
          }
        }
      }
    },
    "/api/records/my/info": {
      "get": {
        "tags": [
          "Record API"
        ],
        "summary": "나의 러닝기록",
        "description": "사용자의 전체 러닝기록을 조회합니다.",
        "operationId": "getMyRecords",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseListRecordsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/records/crew/info": {
      "get": {
        "tags": [
          "Record API"
        ],
        "summary": "나의 크루 러닝기록 등록",
        "description": "사용자가 속한 크루의 러닝기록을 등록합니다.",
        "operationId": "getCrewInfo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseCrewRecordResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/crews/{crewId}": {
      "get": {
        "tags": [
          "Crew API"
        ],
        "summary": "크루 상세 조회",
        "description": "크루 ID로 크루 상세 정보를 조회합니다.",
        "operationId": "getCrew",
        "parameters": [
          {
            "name": "crewId",
            "in": "path",
            "description": "크루 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseCrewResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Crew API"
        ],
        "summary": "크루 삭제",
        "description": "크루 ID로 해당 크루를 삭제합니다.",
        "operationId": "deleteCrew",
        "parameters": [
          {
            "name": "crewId",
            "in": "path",
            "description": "크루 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/crews/{crewId}/members": {
      "get": {
        "tags": [
          "Crew API"
        ],
        "summary": "크루 멤버 조회",
        "description": "크루의 리더 및 멤버 정보를 조회합니다.",
        "operationId": "getCrewMembers",
        "parameters": [
          {
            "name": "crewId",
            "in": "path",
            "description": "크루 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseCrewMemberResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/crews/{crewId}/groups/{groupId}": {
      "get": {
        "tags": [
          "Group API"
        ],
        "summary": "그룹 상세 조회",
        "description": "특정 크루 내 그룹의 상세 정보를 조회합니다.",
        "operationId": "getGroupDetail",
        "parameters": [
          {
            "name": "crewId",
            "in": "path",
            "description": "크루 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "그룹 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseGroupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/crews/{crewId}/boards/{boardId}": {
      "get": {
        "tags": [
          "Board API"
        ],
        "summary": "크루 게시글 상세 조회",
        "description": "게시글 ID로 단일 게시글의 상세 내용을 조회합니다.",
        "operationId": "getBoardDetail",
        "parameters": [
          {
            "name": "crewId",
            "in": "path",
            "description": "크루 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "boardId",
            "in": "path",
            "description": "게시글 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseBoardDetailResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Board API"
        ],
        "summary": "크루 게시글 삭제",
        "description": "특정 게시글을 삭제합니다.",
        "operationId": "deleteBoard",
        "parameters": [
          {
            "name": "crewId",
            "in": "path",
            "description": "크루 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "boardId",
            "in": "path",
            "description": "게시글 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/crews/{crewId}/boards/notice": {
      "get": {
        "tags": [
          "Board API"
        ],
        "summary": "크루 공지 게시글 목록 조회",
        "description": "크루의 공지 게시글 목록을 페이징하여 조회합니다. keyword가 없으면 전체 조회합니다.",
        "operationId": "getNotices",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "createdAt,DESC"
              ]
            }
          },
          {
            "name": "crewId",
            "in": "path",
            "description": "크루 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "검색 키워드 (제목/내용)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponsePageResponseDtoBoardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/crews/{crewId}/boards/basic": {
      "get": {
        "tags": [
          "Board API"
        ],
        "summary": "크루 일반 게시글 목록 조회",
        "description": "크루의 일반 게시글 목록을 페이징하여 조회합니다. keyword가 없으면 전체 조회합니다.",
        "operationId": "getBoards",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "createdAt,DESC"
              ]
            }
          },
          {
            "name": "crewId",
            "in": "path",
            "description": "크루 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "검색 키워드 (제목/내용)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponsePageResponseDtoBoardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/courses/{courseId}": {
      "get": {
        "tags": [
          "Course API"
        ],
        "summary": "코스 상세 조회",
        "description": "특정 코스의 상세 정보를 조회합니다.",
        "operationId": "getCourseDetail",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "description": "코스 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseCourseResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BaseResponseTokenReIssueResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/TokenReIssueResponse"
          }
        }
      },
      "TokenReIssueResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        }
      },
      "BaseResponseString": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "string"
          }
        }
      },
      "JoinRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "maxLength": 2147483647,
            "minLength": 8,
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "LEADER",
              "MEMBER",
              "GENERAL"
            ]
          },
          "birth": {
            "type": "string",
            "format": "date"
          },
          "address": {
            "type": "string"
          },
          "profileUrl": {
            "type": "string"
          },
          "profileBase64": {
            "type": "string"
          },
          "defaultRole": {
            "type": "string",
            "enum": [
              "LEADER",
              "MEMBER",
              "GENERAL"
            ]
          }
        },
        "description": "회원가입 요청 정보"
      },
      "BaseResponseJoinResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/JoinResponse"
          }
        }
      },
      "JoinResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "profileUrl": {
            "type": "string"
          }
        }
      },
      "RegisterRecordRequest": {
        "type": "object",
        "properties": {
          "courseId": {
            "type": "integer",
            "format": "int64"
          },
          "startdate": {
            "type": "string",
            "format": "date-time"
          },
          "enddate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "등록할 기록 정보"
      },
      "BaseResponseRegisterRecordResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/RegisterRecordResponse"
          }
        }
      },
      "RegisterRecordResponse": {
        "type": "object",
        "properties": {
          "recordId": {
            "type": "integer",
            "format": "int64"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "totalTime": {
            "type": "integer",
            "format": "int64"
          },
          "startdate": {
            "type": "string",
            "format": "date-time"
          },
          "enddate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RegisterCrewRequest": {
        "required": [
          "description",
          "name",
          "space",
          "tag"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "space": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "limit": {
            "maximum": 100,
            "minimum": 2,
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "크루 생성 요청 정보"
      },
      "BaseResponseRegisterCrewResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/RegisterCrewResponse"
          }
        }
      },
      "RegisterCrewResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "space": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "user_count": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "auto": {
            "type": "boolean"
          }
        }
      },
      "RegisterGroupRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "courseId": {
            "type": "integer",
            "format": "int64"
          },
          "meetingLocation": {
            "type": "string"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "등록할 그룹 정보"
      },
      "BaseResponseRegisterGroupResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/RegisterGroupResponse"
          }
        }
      },
      "RegisterGroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RegisterBoardRequest": {
        "required": [
          "boardType",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "boardType": {
            "type": "string",
            "enum": [
              "NOTICE",
              "BASIC"
            ]
          }
        },
        "description": "게시글 작성 요청 데이터"
      },
      "BaseResponseRegisterBoardResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/RegisterBoardResponse"
          }
        }
      },
      "RegisterBoardResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RegisterCommentRequest": {
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        },
        "description": "댓글 내용"
      },
      "BaseResponseRegisterCommentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/RegisterCommentResponse"
          }
        }
      },
      "RegisterCommentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          }
        }
      },
      "RegisterCourseRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "encodedPath": {
            "type": "string"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "like": {
            "type": "integer",
            "format": "int32"
          },
          "startLat": {
            "type": "number",
            "format": "double"
          },
          "startLng": {
            "type": "number",
            "format": "double"
          },
          "endLat": {
            "type": "number",
            "format": "double"
          },
          "endLng": {
            "type": "number",
            "format": "double"
          },
          "defaultLike": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "등록할 코스 정보"
      },
      "BaseResponseCourseResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/CourseResponse"
          }
        }
      },
      "CourseResponse": {
        "type": "object",
        "properties": {
          "courseId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "like": {
            "type": "integer",
            "format": "int32"
          },
          "startLat": {
            "type": "number",
            "format": "double"
          },
          "startLng": {
            "type": "number",
            "format": "double"
          },
          "endLat": {
            "type": "number",
            "format": "double"
          },
          "endLng": {
            "type": "number",
            "format": "double"
          },
          "encodedPath": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "CourseImageRequest": {
        "type": "object",
        "properties": {
          "courseBase64": {
            "type": "string"
          }
        }
      },
      "BaseResponseVoid": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "RegisterDescriptionRequest": {
        "required": [
          "description"
        ],
        "type": "object",
        "properties": {
          "courseId": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "설명 등록 요청 정보"
      },
      "BaseResponseRegisterDescriptionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/RegisterDescriptionResponse"
          }
        }
      },
      "RegisterDescriptionResponse": {
        "type": "object",
        "properties": {
          "courseId": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "BaseResponseInfoResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/InfoResponse"
          }
        }
      },
      "InfoResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "birth": {
            "type": "string",
            "format": "date"
          },
          "address": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "joinDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "BaseResponseUser": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Board": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "crew": {
            "$ref": "#/components/schemas/Crew"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "boardType": {
            "type": "string",
            "enum": [
              "NOTICE",
              "BASIC"
            ]
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "board": {
            "$ref": "#/components/schemas/Board"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "Course": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Records"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          },
          "name": {
            "type": "string"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "like": {
            "type": "integer",
            "format": "int32"
          },
          "startLat": {
            "type": "number",
            "format": "double"
          },
          "startLng": {
            "type": "number",
            "format": "double"
          },
          "endLat": {
            "type": "number",
            "format": "double"
          },
          "endLng": {
            "type": "number",
            "format": "double"
          },
          "encodedPath": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Crew": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "boards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Board"
            }
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "space": {
            "type": "string"
          },
          "isAuto": {
            "type": "boolean"
          },
          "userCount": {
            "type": "integer",
            "format": "int32"
          },
          "tag": {
            "type": "string"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Group": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "meetingLocation": {
            "type": "string"
          },
          "crew": {
            "$ref": "#/components/schemas/Crew"
          },
          "course": {
            "$ref": "#/components/schemas/Course"
          }
        }
      },
      "GroupUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "groupRole": {
            "type": "string",
            "enum": [
              "ADMIN",
              "MEMBER"
            ]
          }
        }
      },
      "Records": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "course": {
            "$ref": "#/components/schemas/Course"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "totalTime": {
            "type": "integer",
            "format": "int64"
          },
          "startdate": {
            "type": "string",
            "format": "date-time"
          },
          "enddate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "crew": {
            "$ref": "#/components/schemas/Crew"
          },
          "profileUrl": {
            "type": "string"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Records"
            }
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          },
          "groupUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupUser"
            }
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "birth": {
            "type": "string",
            "format": "date"
          },
          "address": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "LEADER",
              "MEMBER",
              "GENERAL"
            ]
          },
          "joinDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "BaseResponseListRecordsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordsResponse"
            }
          }
        }
      },
      "RecordsResponse": {
        "type": "object",
        "properties": {
          "recordsId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "totalTime": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BaseResponseCrewRecordResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/CrewRecordResponse"
          }
        }
      },
      "CrewRecordResponse": {
        "type": "object",
        "properties": {
          "crewId": {
            "type": "integer",
            "format": "int64"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "totalTime": {
            "type": "integer",
            "format": "int64"
          },
          "recordCount": {
            "type": "integer",
            "format": "int32"
          },
          "memberCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BaseResponsePageResponseDtoCrewResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponseDtoCrewResponse"
          }
        }
      },
      "CrewResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "space": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "user_count": {
            "type": "integer",
            "format": "int32"
          },
          "leader": {
            "$ref": "#/components/schemas/UserDto"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "auto": {
            "type": "boolean"
          }
        }
      },
      "PageResponseDtoCrewResponse": {
        "type": "object",
        "properties": {
          "item": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrewResponse"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationDto"
          }
        }
      },
      "PaginationDto": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "perPage": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "profileUrl": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          }
        }
      },
      "BaseResponseCrewResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/CrewResponse"
          }
        }
      },
      "BaseResponseCrewMemberResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/CrewMemberResponse"
          }
        }
      },
      "CrewMemberResponse": {
        "type": "object",
        "properties": {
          "leader": {
            "$ref": "#/components/schemas/UserDto"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          }
        }
      },
      "BaseResponseListGroupResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupResponse"
            }
          }
        }
      },
      "GroupResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "meetingLocation": {
            "type": "string"
          },
          "admin": {
            "$ref": "#/components/schemas/UserInfo"
          },
          "member": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInfo"
            }
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "profileUrl": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "BaseResponseGroupResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/GroupResponse"
          }
        }
      },
      "BaseResponseBoardDetailResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/BoardDetailResponse"
          }
        }
      },
      "BoardDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "userinfo": {
            "$ref": "#/components/schemas/UserDto"
          },
          "boardType": {
            "type": "string",
            "enum": [
              "NOTICE",
              "BASIC"
            ]
          }
        }
      },
      "BaseResponseListCommentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentResponse"
            }
          }
        }
      },
      "CommentResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "nickname": {
            "type": "string"
          }
        }
      },
      "BaseResponsePageResponseDtoBoardResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponseDtoBoardResponse"
          }
        }
      },
      "BoardResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "userinfo": {
            "$ref": "#/components/schemas/UserDto"
          },
          "boardType": {
            "type": "string",
            "enum": [
              "NOTICE",
              "BASIC"
            ]
          }
        }
      },
      "PageResponseDtoBoardResponse": {
        "type": "object",
        "properties": {
          "item": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoardResponse"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationDto"
          }
        }
      },
      "BaseResponsePageResponseDtoCourseResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageResponseDtoCourseResponse"
          }
        }
      },
      "PageResponseDtoCourseResponse": {
        "type": "object",
        "properties": {
          "item": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CourseResponse"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationDto"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
